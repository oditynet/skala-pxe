# Install Virtuozzo
#cmdline

install 

url --url http://10.31.0.150/vr7

lang en_US.UTF-8

keyboard --vckeymap=us --xlayouts='us'

#partition scheme
zerombr
#ignoredisk --only-use=/dev/sdb
clearpart --all --initlabel --disklabel=gpt
# --drives=/dev/sdb
#bootloader --location=partition --driveorder=/dev/sdb
bootloader --append=" crashkernel=auto" --location=mbr --driveorder=/dev/sdb
#ignoredisk --only-use=/dev/disk/by-path/pci-0000:05:00.0-sas-0x5000039638182bb6-lun-0
#clearpart  --all --initlabel --disklabel=gpt --drives=/dev/disk/by-path/pci-0000:05:00.0-sas-0x5000039638182bb6-lun-0
#bootloader --append=" crashkernel=auto" --location=mbr --driveorder=/dev/disk/by-path/pci-0000:05:00.0-sas-0x5000039638182bb6-lun-0

# /boot
part /boot --fstype=ext4 --size=1024 --ondisk=/dev/sdb --asprimary
#part /boot --ondisk=/dev/disk/by-path/pci-0000:05:00.0-sas-0x5000039638182bb6-lun-0 --asprimary --size=1074
#part raid.02 --ondisk=/dev/disk/by-path/pci-0000:00:1f.2-ata-2.0 --asprimary --size=1074

# /boot/efi
part /boot/efi  --fstype=efi --size=512  --ondisk=/dev/sdb --asprimary
#part /boot/efi --ondisk=/dev/disk/by-path/pci-0000:05:00.0-sas-0x5000039638182bb6-lun-0 --asprimary --size=1074
#part raid.11 --ondisk=/dev/disk/by-path/pci-0000:00:1f.2-ata-1.0 --asprimary --size=1074
#part raid.12 --ondisk=/dev/disk/by-path/pci-0000:00:1f.2-ata-2.0 --asprimary --size=1074

# all other
part pv.1 --size=1 --grow --ondisk=/dev/sdb
#part pv.1 --ondisk=/dev/disk/by-path/pci-0000:05:00.0-sas-0x5000039638182bb6-lun-0 --asprimary --size=158056
#part raid.21 --ondisk=/dev/disk/by-path/pci-0000:00:1f.2-ata-1.0 --asprimary --size=908056
#part raid.22 --ondisk=/dev/disk/by-path/pci-0000:00:1f.2-ata-2.0 --asprimary --size=908056

#raid /boot --level=1 --fstype=ext4 --device=md0 raid.01# raid.02
#raid /boot/efi --level=1 --fstype=efi --device=md1 raid.11# raid.12
#raid pv.1 --level=1 --device=md2 raid.21# raid.22

volgroup virtuozzo pv.1
logvol /vz --vgname=virtuozzo --size=44360 --name=vz --fstype=ext4
logvol / --vgname=virtuozzo --size=54960 --name=root --fstype=ext4
logvol swap --vgname=virtuozzo --size=4720 --name=swap --fstype=swap

cep --disagree

network  --bootproto=dhcp --device=enp2s0f0 --onboot=on --ipv6=auto --activate
#network  --bootproto=dhcp --device=enp2s0f1--onboot=off --ipv6=auto --no-activate

# up2date

rootpw --iscrypted $1$pXYyDKX/$DLDCSHJzUezCYJP8V/iU81
auth  --useshadow  --passalgo=sha512

selinux --disabled

services --disabled="chronyd"

timezone Europe/Moscow --isUtc --nontp

readykernel --disable-autoupdate

reboot

key "test"

%packages
#@^cloudserver
@base
@core
@ha
@high-availability
@vstorage
@vstorage-ui-agent
@vstorage-ui-backend
#@optional
@ps
@qemu
@readykernel
@templates
@vz
#@va-agent
chrony
r-virtualization-7-x86_64-ez
va-agent-release
va-agent-storage
#@anaconda-tools
kexec-tools
net-snmp
net-snmp-libs
net-snmp-agent-libs
vstorage-metadata-server
vstorage-ctl
vstorage-libs-shared
vstorage-chunk-server
vstorage-iscsi
vstorage-client
shaman
cpupools
pyparted
pstorage-scsi-target-utils
arptables
xtables_wdog_tmo
rmond
pdrs
ledmon
ipmitool
OpenIPMI-modalias
shim
grub2-efi
#efivar
#grub2-tools-efi
%end

%addon com_virtuozzo_readykernel

%end
%addon com_virtuozzo_eula

%end
%addon com_virtuozzo_vstorage

%end
%addon com_virtuozzo_license

%end
%addon com_redhat_kdump --enable --reserve-mb='auto'

%end


%anaconda
pwpolicy root --minlen=6 --minquality=50 --notstrict --nochanges --notempty
pwpolicy user --minlen=6 --minquality=50 --notstrict --nochanges --notempty
pwpolicy luks --minlen=6 --minquality=50 --notstrict --nochanges --notempty
%end

%pre

 #!/bin/sh
wipefs -af /dev/sdb
wipefs -af /dev/sdc
wipefs -af /dev/sda
#SATA=$(lsblk o NAME,ROTA,TRAN|grep sd|grep 1|head -1|awk '{print $1}')
%end



%post

#!/bin/sh

set -x -v
exec 1>/root/kspost-vz.log 2>&1

LO=$(ip ad show | grep 10.31 | awk  'BEGIN { FS="[./]"}; {print $4}')

echo node$LO > /etc/hostname
echo "PermitRootLogin yes" >>/etc/ssh/sshd_config

cat << EOF > /etc/sysconfig/network-scripts/ifcfg-bond0
DEVICE=bond0
NAME=bond0
BOOTPROTO=none
ONBOOT=yes
USERCTL=no
TYPE="Bond"
BONDING_OPTS="mode=4 miimon=100"
EOF

rm -f /etc/sysconfig/network-scripts/ifcfg-enp2s0f0
rm -f /etc/sysconfig/network-scripts/ifcfg-enp2s0f1

cat << EOF > /etc/sysconfig/network-scripts/ifcfg-ens3
TYPE=Ethernet
BOOTPROTO=none
NAME=ens3
DEVICE=ens3
ONBOOT=yes
MASTER="bond0"
SLAVE=yes
EOF

cat << EOF > /etc/sysconfig/network-scripts/ifcfg-ens3d1
TYPE=Ethernet
BOOTPROTO=none
NAME=ens3d1
DEVICE=ens3d1
ONBOOT=yes
MASTER="bond0"
SLAVE=yes
EOF

cat << EOF > /etc/sysconfig/network-scripts/ifcfg-bond0.11
VLAN=yes
TYPE=VLAN
PHYSDEV=bond0
DEVICE=bond0.11
BOOTPROTO=none
ONBOOT=yes
BRIDGE=br1
EOF

cat << EOF > /etc/sysconfig/network-scripts/ifcfg-bond0.31
VLAN=yes
TYPE=VLAN
PHYSDEV=bond0
DEVICE=bond0.31
BOOTPROTO=none
ONBOOT=yes
BRIDGE=br0
EOF

cat << EOF > /etc/sysconfig/network-scripts/ifcfg-br0
DEVICE=br0
ONBOOT=yes
TYPE="Bridge"
DELAY=2
NETMASK=255.255.255.0
IPADDR=10.31.0.$LO
GATEWAY=10.31.0.1
DNS1=8.8.8.8
DEFROUTE=yes
STP=no
EOF

cat << EOF > /etc/sysconfig/network-scripts/ifcfg-br1
DEVICE=br1
ONBOOT=yes
TYPE="Bridge"
DELAY=2
NETMASK=255.255.255.0
IPADDR=192.168.1.$LO
DEFROUTE=no
STP=no
EOF

cat << EOF > /etc/hosts
127.0.0.1 node$LO
EOF

#eval 'systemctl restart NetworkManager'
#systemctl restart NetworkManager

cat << EOF > /boot/efi/startup.nsh
IF EXIST FS0:EFI\rosplatforma\grubx64.efi THEN
FS0:
EFI\rosplatforma\grubx64.efi
ELSE
FS1:
EFI\rosplatforma\grubx64.efi
ENDIF
EOF

#container --special=va-mn --ip=10.31.0.130 --rootpw=Pa$$w0rd
#container --special=vstorage-ui --ip=10.31.0.131 --rootpw=Pa$$w0rd
#register_vaagent --mn_addr=10.31.0.130 --rootpw=Pa$$w0rd
#register_vstorage_ui --ui_addr=10.31.0.131

#MINT=`ip link show | grep enp2s0f0 | grep "state UP" | cut -f2 -d':'| tr -d " "`
#cat << EOF > /etc/sysconfig/network-scripts/ifcfg-$MINT
#TYPE=Ethernet
#BOOTPROTO=none
#DEVICE=$MINT
#NAME=$MINT
#ONBOOT=yes
#USERCTL=no
#NETMASK=255.255.255.0
#IPADDR=10.31.0.$((LO+100))
#GATEWAY=10.31.0.1
#DNS1=8.8.8.8
#EOF

#echo  root:Pa$$w0rd|chpasswd

#  preparing disks
####SDB - !!!!!!!!!!!!!!!!!!!!!!!!!!!!SDB!!!!!!!!!!!!!!!!!!!!!!
HDDS=$(lsblk -ld -o NAME,ROTA,TRAN | grep sas|grep -v sdb | grep 1 | awk '{print $1}')
SSDS=$(lsblk -ld -o NAME,ROTA,TRAN | grep sas | grep 0 | awk '{print $1}')


###!!!!!!!!!!!!!!!!!!!!
CLUSTER=SD

for i in $HDDS; do
        /usr/libexec/vstorage/prepare_vstorage_drive /dev/${i} --noboot -y
done

for i in $SSDS; do
        /usr/libexec/vstorage/prepare_vstorage_drive /dev/${i} --noboot --ssd -y
done

#  preparing mounts


mkdir -p /vstorage/${CLUSTER}

HDD_COUNT=0
for i in $HDDS; do
        mkdir -p /vstorage/${CLUSTER}-hdd${HDD_COUNT}
        echo "UUID=$(blkid -o value -s UUID /dev/${i}1) /vstorage/${CLUSTER}-hdd${HDD_COUNT} ext4 defaults 1 2" >> /etc/fstab
        HDD_COUNT=$((${HDD_COUNT}+1))
done

SSD_COUNT=0
for i in $SSDS; do
        mkdir -p /vstorage/${CLUSTER}-ssd${SSD_COUNT}
        echo "UUID=$(blkid -o value -s UUID /dev/${i}1) /vstorage/${CLUSTER}-ssd${SSD_COUNT} ext4 defaults 1 2" >> /etc/fstab
        SSD_COUNT=$((${SSD_COUNT}+1))
done

mkdir -p /root/.ssh
echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDj2uHR5/iPIGhY4pqMprzBL7dGiEgCLhJPdHTpGN66fUpfJpks1cizJdTf2b7gwVdwrSwFIeOmndB03gVAbZ/qWVo+Z37WvtK/mFJtdasFfOBrg5FAiWLFQAfQy6j+RH6TSOV2TrZboufhD/iO1wANS91YZlrewV6hTj2bhEaGZ94YQFO2Crx78w0hRFiBtmFKDT1f/K+sb+r4SGpXhgr82lfqyvRDVEutguMZpNQ2vZ1lKRjpecmtBhsZ95Ndqx90SW76LLvuO3/9c0uy3xVJSNs4lOO5Sm0wmMtq1Jrd9qsxXw5LJpNSlTIMRV97T6bUfl16YD/s6bqgVGsTxwJR root@admin" >> /root/.ssh/authorized_keys

#eval 'brctl delif br0 enp2s0f1'
#eval 'brctl delif br1 enp2s0f0'
#eval 'brctl delif br0 enp2s0f0'
#eval 'brctl delif br1 enp2s0f1'

eval 'brctl addif br0 bond0.31'
eval 'brctl addif br1 bond0.11'



%end
